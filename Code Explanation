1-- The capacitor on pin 3 will be high if we have to activate the security system and the capacitor on pin 4 will be high if we have to de-activate the security system.
    Importing the time, requests and boliot library.
  
    import time                  #Import time to peform delay operations
    import requests              #use requests to send mail via webhooks IFTTT
    from boltiot import Bolt     #Import boltiot to control GPIO pins through API
    
2-- Enter the credentials of the device such as the API key and the Device ID. Only with these two values you can access any GPIO pin on the device.
    Do not share these with public if since they can be used by anyone to control your GPIO pins.
    
    api_key = "4749fe75-6c61-45f1-bee5-f9a6a1bd9103"         #Get your API key from Blot Cloud Website 
    device_id  = "BOLT11691968"                              #Get your Bolt device ID form Bolt Cloud Website
    mybolt = Bolt(api_key, device_id)
    
3-- The API section we will get response when we perform a digital Read in the form of string, 
    so I have assigned those string values to two variables so that we can use them in our program easily.
    
    HIGH = '{"value": "1", "success": "1"}'          #This will be returned by bolt API if digital read is high
    LOW = '{"value": "0", "success": "1"}'           #This will be returned by bolt API if digital read is low
    
4-- Check if the alarm is activated by reading the pin 3 which is nothing but the capacitor. 
    If the pin is high we make the orange LED to glow and then exit this loop and get into activated while loop. 
    We check this for every 5 seconds just to make sure that we do not exceed the API rate limit provided by bolt, which is 30 calls per minute.
    
        while alarm == 0: #If alarm is off
        response = mybolt.digitalRead('3') #check if it is being activated
        if (response == HIGH):
            print("Security System is activated")
            mybolt.digitalWrite('2', 'HIGH') #Turn on LED to indicate Alarm is activated
            alarm = 1
        elif (response == LOW):
           print ("Waiting for Security System to be activated....")
        else:
           print ("Problem in getting value form pin 3")
       time.sleep(5) #check once in every 5 seconds to avoid exceeding API rate limit 
       
5--  Inside the activated while loop, we have to check for pin 4 to know if the alarm is being de-activated.

while alarm == 1: #If alarm is on
        response = mybolt.digitalRead('4') #check is it is being de-activated
        if (response == HIGH):
            print("Security System is De-activated")
            mybolt.digitalWrite('2', 'LOW')#Turn off LED to indicate Alarm is De-activated
            alarm = 0
            time.sleep(5)
        elif (response == LOW):
            print ("Security System is currently active can be deactivated from google assistant")
        else:
            print ("Problem in getting value form pin 4")

        response = mybolt.digitalRead('0') #check if hall sensor is triggered
        if (response == HIGH): #if magnet is not present     
            print ("Alert! Security breach Buzzer ON")
            mybolt.digitalWrite('1', 'HIGH')
            requests.get('https://maker.ifttt.com/trigger/Breach/with/key/i6nPcZ5ZlzaVdbYITw6VGcpMkrVO5GqAX049cHEBDt') #webhook link to trigger mail through IFTTT
            time.sleep(5)
            mybolt.digitalWrite('1', 'LOW')
            print ("Buzzer OFF")
        elif (response == LOW):
            print ("No problem, all good!")
        else: 
            print ("Problem in reading the value of button")
        time.sleep(5)
        
   6-- Now test the device 
